<<  Dto= Data Transfer Object 를  만드는 이유>> 
  =>  계층 간(예: 클라이언트와 서버, 또는 서비스 계층과 컨트롤러 계층) 데이터를 주고받을 때 사용되는 객체이다.

1) 데이터 필터링: 클라이언트에 필요한 데이터만 제공하여 불필요한 정보 노출을 줄이고 데이터 전송량을 최적화 한다. 
2) 무한 참조 방지: 양방향 관계에서 엔티티를 직접 JSON으로 직렬화할 때 발생하는 무한 참조 문제를 해결한다.
3) API 명세의 명확성: API 요청과 응답의 형태를 명확히 정의하여 프론트엔드와 백엔드 간의 협업을 용이하게 한다.
4) 보안 및 유효성 검사: 엔티티와 DTO를 분리함으로써, 클라이언트로부터 들어오는 데이터에 대한 유효성 검사를 DTO 계층에서 수행하고,
                    엔티티를 직접 참조 후 조작할 수 없도록 한다.