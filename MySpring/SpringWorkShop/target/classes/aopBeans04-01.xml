<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<!-- [1단계] beans컨테이너가 <beans> 요소 로딩 -->
	<!-- 대상 클래스 -->
	<bean id="student" class="com.workshop04.test01.Student" />

	<!-- 공통 기능 클래스, 핵심 메소드 가로채기 클래스 -->
	<bean id="myAdvice" class="com.workshop04.test01.MyAspect" />

	<!-- [3단계] AOP Advisor : pointcut[핵심로직 실행] + advice[공통 로직] -->
	<bean id="myAdvisor"
		class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut">
			<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
				<property name="pattern" value=".*study" /> <!-- classWork를 찜 -->
			</bean>
		</property>
		<property name="advice" ref="myAdvice" /> <!-- classWork 호출하면 myAdvice실행 -->
	</bean>

	<!-- [2단계] 자동 프록시 생성기 : AOP Advisor를 찾아 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

</beans>
