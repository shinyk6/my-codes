[BE 작성 후 테스트]

1. DB 생성, 테이블 생성 -> 스키마 생성한다.
2. backend/config/db.js -> 연결객체 추가한다. (db, ID, PW 지정한다.)
3. 순서도 (순서대로 로직 작성, 흐름 확인) 
    클라이언트 -> app.js -> travelRoutes[라우팅] -> travelController[로직(페이지)처리]
             -> travelModel[Dao] -> db.js[DB연결] -> DB[MySqlDB] 

4. 서버 실행
$ cd backend
$ npm init -y        -> package.json을 만들어줌.

5. 플러그인 설치
$ npm install express cors mysql2

6. 실행 명령
$ node app.js (기본 실행)
$ npm start (스크립트 실행) 싱글스레드 / 여러 서버를 실행하고 싶으면 npm run dev 


7. API 요청 주소 정리해보자.  주소설계 - app.js/travelRoutes.js
GET http://localhost:3001/api/travels : 전체 출력 getAll
POST http://localhost:3001/api/travels : 입력 create
GET http://localhost:3001/api/travels/1 : 상세 조회 getOne
PUT http://localhost:3001/api/travels/1 : 수정 update
DELETE http://localhost:3001/api/travels/1 : 삭제 delete

8. API 주소 요청 TEST해보자. (PostMan으로 )

==========================================================
[FE 작성 후 테스트]

1. npm init -y / package.json 생성    

    "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test"
    }

   npm install  react-scripts      / 모듈 설치

2. 실행 npm start               -> package.json의 scripts부분에 
                                 "start":"react-scripts start", "build" : "react-scripts build" 스크립트 추가 하고 다시 install
3. 여행지 목록 조회
